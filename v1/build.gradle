plugins {
	id 'java'
	id 'war' // для генерации WAR
	id 'org.springframework.boot' version '3.2.5' // для Fat JAR
	id 'io.spring.dependency-management' version '1.1.0'
	id 'maven-publish'
}

version = '1.0.2' // Добавляем версию проекта здесь

repositories {
	mavenCentral()
}

dependencies {
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.hibernate:hibernate-core:6.5.0.Final'
	implementation('com.h2database:h2:2.2.224')
	implementation ('org.liquibase:liquibase-core:4.27.0')
	runtimeOnly 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.5'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.2.5'
	implementation 'org.slf4j:slf4j-api:2.0.9'
	implementation 'ch.qos.logback:logback-classic:1.5.13'
	implementation 'ch.qos.logback:logback-core:1.5.13'
	implementation 'com.google.guava:guava:32.1.3-jre'
	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.5'
	testImplementation 'com.h2database:h2:2.2.224'
	testImplementation "net.javacrumbs.json-unit:json-unit-assertj:2.38.0"
	testCompileOnly 'org.projectlombok:lombok:1.18.32'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf:3.2.5')
}

test {
	useJUnitPlatform()
}

// Конфигурация для Thin JAR (без зависимостей)
jar {
	enabled = false // Отключен, так как используем bootJar
	archiveBaseName = 'insurance-thin'
	manifest {
		attributes 'Main-Class': 'org.javaguru.travel.insurance.InsuranceApplication'
	}
}

// Конфигурация для Fat JAR (Spring Boot)
bootJar {
	enabled = true
	archiveBaseName = 'insurance-calculator'
}

// Конфигурация для Fat WAR (со встроенными зависимостями)
war {
	enabled = false // Отключен, так как используем bootJar
	archiveBaseName = 'insurance-fat'
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			// Указываем, какой артефакт публикуем (Fat JAR из Spring Boot)
			artifact bootJar

			// Координаты Maven (как в <groupId>, <artifactId>, <version>)
			groupId = 'org.javaguru'
			artifactId = 'insurance-calculator'
			version = version

			// Метаданные для pom.xml
			pom {
				name = 'Insurance Calculator Application'
				description = 'Application to calculate travel insurance premium'
				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
			}
		}
	}
	repositories {
		mavenLocal()  // Публикуем в локальный Maven-репозиторий (~/.m2/repository)
		// Альтернатива: удалённый репозиторий (Nexus/Artifactory)
		// maven {
		//     url "https://repo.example.com/releases"
		//     credentials {
		//         username = "user"
		//         password = "password"
		//     }
		// }
	}
}