plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'doc-generator'
version = '0.0.1'

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.5'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.kafka:spring-kafka'

    // Логирование
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.14'

    // Jackson (JSON/XML)
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Вспомогательные библиотеки
    implementation 'com.google.guava:guava:32.1.3-jre'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    implementation 'com.github.librepdf:openpdf:1.3.30'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // Тестирование
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.5'
    testImplementation 'uk.org.webcompere:model-assert:1.0.0'
    testImplementation 'net.javacrumbs.json-unit:json-unit-assertj:2.38.0'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
    testImplementation("org.apache.pdfbox:pdfbox:2.0.27")
}

// Конфигурация Jib файла
apply from: 'jib.gradle'

bootJar {
    enabled = true
    archiveFileName = "pdf-generator-service-${project.version}.jar"
}

tasks.named('jibDockerBuild') {
    dependsOn 'build'
    finalizedBy 'cleanOldDockerImages'// Сначала соберет JAR, потом создаст образ
}

// Регистрируем задачу для удаления старых образов
tasks.register('cleanOldDockerImages', Exec) {
    commandLine 'docker', 'image', 'prune', '-f'
}