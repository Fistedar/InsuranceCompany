# Docker MySQL DataBase
spring.datasource.url=jdbc:mysql://insurance-mysql-container:3306/insurance_db?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=RootR1ta
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Kafka configurations
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.isolation-level=read_committed
spring.kafka.listener.ack-mode=record

# Main Service - prod
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.acks=all

# Main Service - cons
spring.kafka.consumer.group-id=main-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Topics Main Service
kafka.topic.pdf-generation=agreement.pdf-generation
kafka.topic.result.pdf-generation=agreement.pdf-result
kafka.dlq.topic=main-service.dlq

# JPA repository MySql
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect